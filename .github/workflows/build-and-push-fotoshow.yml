name: Build and Push fotoshow Image

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/fotoshow

jobs:
  build-and-push:
    name: Build and push to GHCR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      - name: Checkout mirkarlar/fotoshow source
        uses: actions/checkout@v4
        with:
          repository: mirkarlar/fotoshow
          path: fotoshow
          token: ${{ secrets.CHECKOUT_PAT }}
          fetch-depth: 1

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Maven build (package)
        if: ${{ hashFiles('fotoshow/pom.xml') != '' }}
        working-directory: fotoshow
        run: mvn -B -ntp -DskipTests package

      - name: Maven test
        if: ${{ hashFiles('fotoshow/pom.xml') != '' }}
        working-directory: fotoshow
        run: mvn -B -ntp test

      - name: Prepare Docker context (Maven -> Gradle layout shim)
        run: |
          if [ -d "fotoshow/target/quarkus-app" ] && [ ! -d "fotoshow/build/quarkus-app" ]; then
            echo "Copying Maven output (target/quarkus-app) to Gradle layout (build/quarkus-app) for Dockerfile compatibility"
            mkdir -p fotoshow/build/quarkus-app
            cp -a fotoshow/target/quarkus-app/. fotoshow/build/quarkus-app/
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./fotoshow
          file: ./fotoshow/src/main/docker/Dockerfile.jvm
          no-cache: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
